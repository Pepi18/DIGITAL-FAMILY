<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" type ="text/css" href="../css/style.css"></head>
</head>
<body>
    <%- include('partials/navigation')%>
    <br>
    <br>
    <br>
    <br>
    <br>
    <!-- Mostrar mensaje de éxito si está presente -->
    <% if (typeof successMessage !== 'undefined') { %>
        <div class="alert alert-info" role="alert">
            <%= successMessage %>
        </div>
    <% } %>
    <div class="form-card1">
        <div class="form-card2">
            <form id="memberForm" class="form" action="/agregarmiembros" method="post">
                <p class="form-heading">Añade miembros a tu familia: <%= nombrefamilia %></p>
                <div class="form-field">
                    <input class="input-field" type="text" name="nombrefamilia" placeholder="nombrefamilia" required value="<%= nombrefamilia %>">
                </div>
                <div class="form-field">
                    <input class="input-field" type="text" name="nombrepersonal" placeholder="Personal Username" required="">
                </div>
                <div class="form-field">
                    <input class="input-field" type="text" name="passwordpersonal" placeholder="Personal Password" required="">
                </div>
                
                
                <button type="submit" class="sendMessage-btn">Agregar miembro</button>
                <a href="/login" class="sendMessage-btn">Finalizar</a>
            </form>
        </div>
    </div>
    <script>
        // Espera a que el DOM esté completamente cargado
        document.addEventListener('DOMContentLoaded', function() {
        // Obtén el formulario
        const form = document.getElementById('memberForm');

        // Agrega un evento de escucha para el evento 'submit' del formulario
        form.addEventListener('submit', async function(event) {
            // Evita el envío predeterminado del formulario
            event.preventDefault();

            // Realiza la solicitud al servidor
             try {
            // Envía los datos del formulario al servidor
                const formData = new FormData(form);
                const response = await fetch(form.action, {
                    method: form.method,
                    body: formData
                });

                // Verifica si la respuesta del servidor es exitosa
                if (!response.ok) {
                    throw new Error('Error al enviar datos al servidor');
                }

                // Restablece los valores de los campos del formulario a vacío después de enviar los datos
                form.reset();

                // Si todo está bien, puedes hacer cualquier otra cosa que necesites aquí, como mostrar un mensaje de éxito
            } catch (error) {
                console.error('Error al enviar datos al servidor:', error);
                // Puedes manejar errores aquí, como mostrar un mensaje de error al usuario
            }
        });
    });

    </script>
    
       
    
    
    
        
</body>
</html>